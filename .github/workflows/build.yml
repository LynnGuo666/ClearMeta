name: Build ClearMeta

on:
  push:
    tags:
      - 'v*'  # 当推送标签时触发，如 v1.0.0
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact-name: ClearMeta-Windows
            executable-name: ClearMeta.exe
          - os: macos-latest
            artifact-name: ClearMeta-macOS
            executable-name: ClearMeta.app
          - os: ubuntu-latest
            artifact-name: ClearMeta-Linux
            executable-name: ClearMeta

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create placeholder QR code (if not exists)
      run: |
        python -c "
        from PIL import Image, ImageDraw
        from pathlib import Path
        if not Path('sponsor_qr.png').exists():
            img = Image.new('RGB', (200, 200), color='white')
            draw = ImageDraw.Draw(img)
            draw.rectangle([10, 10, 190, 190], outline='black', width=2)
            draw.text((100, 80), '赞助', fill='black', anchor='mm')
            draw.text((100, 100), '二维码', fill='black', anchor='mm')
            draw.text((100, 120), '占位图', fill='gray', anchor='mm')
            img.save('sponsor_qr.png')
        "

    - name: Build with PyInstaller (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --noconfirm --windowed --onefile --name ClearMeta --add-data "sponsor_qr.png;." --add-data "README.md;." main.py

    - name: Build with PyInstaller (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller ClearMeta.spec

    - name: Build with PyInstaller (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --noconfirm --windowed --name ClearMeta --add-data "sponsor_qr.png:." --add-data "README.md:." main.py

    - name: Install additional Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0

    - name: Create release archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir release
        copy dist\ClearMeta.exe release\
        copy README.md release\
        copy sponsor_qr.png release\
        tar -czf ClearMeta-Windows.tar.gz -C release .

    - name: Create release archive (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        mkdir release
        cp -r dist/ClearMeta.app release/
        cp README.md release/
        cp sponsor_qr.png release/
        tar -czf ClearMeta-macOS.tar.gz -C release .

    - name: Create release archive (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir release
        cp -r dist/ClearMeta release/
        cp README.md release/
        cp sponsor_qr.png release/
        tar -czf ClearMeta-Linux.tar.gz -C release .

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: |
          ClearMeta-*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ClearMeta-Windows/ClearMeta-Windows.tar.gz
          ClearMeta-macOS/ClearMeta-macOS.tar.gz
          ClearMeta-Linux/ClearMeta-Linux.tar.gz
        body: |
          ## ClearMeta ${{ github.ref_name }}
          
          一个简单易用的图片元数据清理工具
          
          ### 功能特性
          - 🖼️ 支持多种图片格式 (JPG, PNG, WebP, TIFF, BMP)
          - 🔄 批量处理
          - 🖱️ 拖拽支持
          - 📊 EXIF 信息查看
          - ⚡ 优先使用 exiftool（可选）
          - 💝 开源免费
          
          ### 下载说明
          - **Windows**: 下载 `ClearMeta-Windows.tar.gz`，解压后运行 `ClearMeta.exe`
          - **macOS**: 下载 `ClearMeta-macOS.tar.gz`，解压后将 `ClearMeta.app` 拖到应用程序文件夹
          - **Linux**: 下载 `ClearMeta-Linux.tar.gz`，解压后运行 `ClearMeta/ClearMeta`
          
          ### 作者信息
          - 作者: Lynn
          - 版本: ${{ github.ref_name }}
          
          如果这个工具对您有帮助，欢迎 ⭐ Star 支持！
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
