name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create placeholder QR code
      run: |
        python -c "
        from PIL import Image, ImageDraw
        from pathlib import Path
        if not Path('sponsor_qr.png').exists():
            img = Image.new('RGB', (200, 200), color='white')
            draw = ImageDraw.Draw(img)
            draw.rectangle([10, 10, 190, 190], outline='black', width=2)
            draw.text((100, 80), '赞助', fill='black', anchor='mm')
            draw.text((100, 100), '二维码', fill='black', anchor='mm')
            draw.text((100, 120), '占位图', fill='gray', anchor='mm')
            img.save('sponsor_qr.png')
        "
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --noconfirm --windowed --onefile --name ClearMeta --add-data "sponsor_qr.png;." --add-data "README.md;." main.py
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: ClearMeta-Windows
        path: dist/ClearMeta.exe

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create placeholder QR code
      run: |
        python -c "
        from PIL import Image, ImageDraw
        from pathlib import Path
        if not Path('sponsor_qr.png').exists():
            img = Image.new('RGB', (200, 200), color='white')
            draw = ImageDraw.Draw(img)
            draw.rectangle([10, 10, 190, 190], outline='black', width=2)
            draw.text((100, 80), '赞助', fill='black', anchor='mm')
            draw.text((100, 100), '二维码', fill='black', anchor='mm')
            draw.text((100, 120), '占位图', fill='gray', anchor='mm')
            img.save('sponsor_qr.png')
        "
    
    - name: Build with PyInstaller
      run: |
        pyinstaller ClearMeta.spec
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: ClearMeta-macOS
        path: dist/ClearMeta.app

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0 libxcb-cursor0
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create placeholder QR code
      run: |
        python -c "
        from PIL import Image, ImageDraw
        from pathlib import Path
        if not Path('sponsor_qr.png').exists():
            img = Image.new('RGB', (200, 200), color='white')
            draw = ImageDraw.Draw(img)
            draw.rectangle([10, 10, 190, 190], outline='black', width=2)
            draw.text((100, 80), '赞助', fill='black', anchor='mm')
            draw.text((100, 100), '二维码', fill='black', anchor='mm')
            draw.text((100, 120), '占位图', fill='gray', anchor='mm')
            img.save('sponsor_qr.png')
        "
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --noconfirm --windowed --name ClearMeta --add-data "sponsor_qr.png:." --add-data "README.md:." main.py
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: ClearMeta-Linux
        path: dist/ClearMeta/

  release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: ClearMeta-Windows
        path: artifacts/windows/
    
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: ClearMeta-macOS
        path: artifacts/macos/
    
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: ClearMeta-Linux
        path: artifacts/linux/
    
    - name: Create release archives
      run: |
        cd artifacts
        
        # Windows
        cd windows
        zip -r ../../ClearMeta-Windows.zip .
        cd ..
        
        # macOS
        cd macos
        tar -czf ../../ClearMeta-macOS.tar.gz .
        cd ..
        
        # Linux
        cd linux
        tar -czf ../../ClearMeta-Linux.tar.gz .
        cd ..
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ClearMeta-Windows.zip
          ClearMeta-macOS.tar.gz
          ClearMeta-Linux.tar.gz
        body: |
          ## ClearMeta ${{ github.ref_name }}
          
          一个简单易用的图片元数据清理工具
          
          ### 功能特性
          - 🖼️ 支持多种图片格式 (JPG, PNG, WebP, TIFF, BMP)
          - 🔄 批量处理
          - 🖱️ 拖拽支持
          - 📊 EXIF 信息查看
          - ⚡ 优先使用 exiftool（可选）
          - 💝 开源免费
          
          ### 下载说明
          - **Windows**: 下载 `ClearMeta-Windows.zip`，解压后运行 `ClearMeta.exe`
          - **macOS**: 下载 `ClearMeta-macOS.tar.gz`，解压后将 `ClearMeta.app` 拖到应用程序文件夹
          - **Linux**: 下载 `ClearMeta-Linux.tar.gz`，解压后运行 `ClearMeta/ClearMeta`
          
          ### 系统要求
          - Windows 10 或更高版本
          - macOS 10.14 或更高版本  
          - Linux (大多数现代发行版)
          
          ### 作者信息
          - 作者: Lynn
          - 版本: ${{ github.ref_name }}
          
          如果这个工具对您有帮助，欢迎 ⭐ Star 支持！
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
